{
    "metadata": {
        "Algorithms": [
            {
                "node": "Optimization Techniques",
                "feature_path": "Optimization Techniques",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/optimization/gradient_descent"
                    }
                ]
            },
            {
                "node": "Gradient Descent Methods",
                "feature_path": "Optimization Techniques/Gradient Descent Methods",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/optimization/gradient_descent"
                    }
                ]
            },
            {
                "node": "Adaptive & Batch Methods",
                "feature_path": "Optimization Techniques/Gradient Descent Methods/Adaptive & Batch Methods",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/optimization/gradient_descent"
                    }
                ]
            },
            {
                "node": "adagrad",
                "feature_path": "Optimization Techniques/Gradient Descent Methods/Adaptive & Batch Methods/adagrad",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "AdagradOptimizer",
                        "path": "src/algorithms/optimization/gradient_descent/adaptive_batch.py"
                    }
                ]
            },
            {
                "node": "adam optimizer",
                "feature_path": "Optimization Techniques/Gradient Descent Methods/Adaptive & Batch Methods/adam optimizer",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "AdamOptimizer",
                        "path": "src/algorithms/optimization/gradient_descent/adaptive_batch.py"
                    }
                ]
            },
            {
                "node": "gd with line search",
                "feature_path": "Optimization Techniques/Gradient Descent Methods/Adaptive & Batch Methods/gd with line search",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "GDWithLineSearch",
                        "path": "src/algorithms/optimization/gradient_descent/adaptive_batch.py"
                    }
                ]
            },
            {
                "node": "nesterov accelerated gd",
                "feature_path": "Optimization Techniques/Gradient Descent Methods/Adaptive & Batch Methods/nesterov accelerated gd",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "NesterovAcceleratedGradient",
                        "path": "src/algorithms/optimization/gradient_descent/adaptive_batch.py"
                    }
                ]
            },
            {
                "node": "rmsprop",
                "feature_path": "Optimization Techniques/Gradient Descent Methods/Adaptive & Batch Methods/rmsprop",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "RMSPropOptimizer",
                        "path": "src/algorithms/optimization/gradient_descent/adaptive_batch.py"
                    }
                ]
            },
            {
                "node": "Stochastic Methods",
                "feature_path": "Optimization Techniques/Gradient Descent Methods/Stochastic Methods",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/optimization/gradient_descent"
                    }
                ]
            },
            {
                "node": "mini-batch sgd",
                "feature_path": "Optimization Techniques/Gradient Descent Methods/Stochastic Methods/mini-batch sgd",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "MiniBatchSGD",
                        "path": "src/algorithms/optimization/gradient_descent/stochastic.py"
                    }
                ]
            },
            {
                "node": "sgd with momentum",
                "feature_path": "Optimization Techniques/Gradient Descent Methods/Stochastic Methods/sgd with momentum",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "SGDWithMomentum",
                        "path": "src/algorithms/optimization/gradient_descent/stochastic.py"
                    }
                ]
            },
            {
                "node": "SVM Optimization",
                "feature_path": "Optimization Techniques/SVM Optimization",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/optimization"
                    }
                ]
            },
            {
                "node": "Optimization Algorithms",
                "feature_path": "Optimization Techniques/SVM Optimization/Optimization Algorithms",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/optimization"
                    }
                ]
            },
            {
                "node": "smo algorithm",
                "feature_path": "Optimization Techniques/SVM Optimization/Optimization Algorithms/smo algorithm",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "SMOSVMOptimizer",
                        "path": "src/algorithms/optimization/svm_optimization.py"
                    }
                ]
            },
            {
                "node": "stochastic gradient descent",
                "feature_path": "Optimization Techniques/SVM Optimization/Optimization Algorithms/stochastic gradient descent",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "SVMStochasticGradientDescentOptimizer",
                        "path": "src/algorithms/optimization/svm_optimization.py"
                    }
                ]
            },
            {
                "node": "Supervised Learning",
                "feature_path": "Supervised Learning",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised"
                    }
                ]
            },
            {
                "node": "Additional Supervised Methods",
                "feature_path": "Supervised Learning/Additional Supervised Methods",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised"
                    }
                ]
            },
            {
                "node": "Miscellaneous",
                "feature_path": "Supervised Learning/Additional Supervised Methods/Miscellaneous",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised"
                    }
                ]
            },
            {
                "node": "5",
                "feature_path": "Supervised Learning/Additional Supervised Methods/Miscellaneous/5",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "UnclassifiedMethod",
                        "path": "src/algorithms/supervised/unclassified_method.py"
                    }
                ]
            },
            {
                "node": "Classification Algorithms",
                "feature_path": "Supervised Learning/Classification Algorithms",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised/classification"
                    }
                ]
            },
            {
                "node": "Decision Trees",
                "feature_path": "Supervised Learning/Classification Algorithms/Decision Trees",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised/classification"
                    }
                ]
            },
            {
                "node": "decision trees",
                "feature_path": "Supervised Learning/Classification Algorithms/Decision Trees/decision trees",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "DecisionTreeClassifier",
                        "path": "src/algorithms/supervised/classification/decision_trees.py"
                    }
                ]
            },
            {
                "node": "Imbalanced Classification",
                "feature_path": "Supervised Learning/Classification Algorithms/Imbalanced Classification",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised/classification"
                    }
                ]
            },
            {
                "node": "imbalanced classification",
                "feature_path": "Supervised Learning/Classification Algorithms/Imbalanced Classification/imbalanced classification",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ImbalancedClassifier",
                        "path": "src/algorithms/supervised/classification/imbalanced_classification.py"
                    }
                ]
            },
            {
                "node": "Logistic Regression",
                "feature_path": "Supervised Learning/Classification Algorithms/Logistic Regression",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised/classification"
                    }
                ]
            },
            {
                "node": "cross-entropy loss",
                "feature_path": "Supervised Learning/Classification Algorithms/Logistic Regression/cross-entropy loss",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "compute_cross_entropy_loss",
                        "path": "src/algorithms/supervised/classification/logistic_regression.py"
                    }
                ]
            },
            {
                "node": "l1 regularization",
                "feature_path": "Supervised Learning/Classification Algorithms/Logistic Regression/l1 regularization",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "logistic_regression_l1_penalty",
                        "path": "src/algorithms/supervised/regression/regularized_regression.py"
                    }
                ]
            },
            {
                "node": "log loss",
                "feature_path": "Supervised Learning/Classification Algorithms/Logistic Regression/log loss",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "compute_log_loss",
                        "path": "src/algorithms/supervised/classification/logistic_regression.py"
                    }
                ]
            },
            {
                "node": "logistic regression",
                "feature_path": "Supervised Learning/Classification Algorithms/Logistic Regression/logistic regression",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "LogisticRegressionClassifier",
                        "path": "src/algorithms/supervised/classification/logistic_regression.py"
                    }
                ]
            },
            {
                "node": "multinomial logistic regression",
                "feature_path": "Supervised Learning/Classification Algorithms/Logistic Regression/multinomial logistic regression",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "MultinomialLogisticRegressionClassifier",
                        "path": "src/algorithms/supervised/classification/logistic_regression.py"
                    }
                ]
            },
            {
                "node": "probit regression",
                "feature_path": "Supervised Learning/Classification Algorithms/Logistic Regression/probit regression",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ProbitRegressionClassifier",
                        "path": "src/algorithms/supervised/classification/logistic_regression.py"
                    }
                ]
            },
            {
                "node": "softmax function",
                "feature_path": "Supervised Learning/Classification Algorithms/Logistic Regression/softmax function",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "softmax",
                        "path": "src/algorithms/supervised/classification/logistic_regression.py"
                    }
                ]
            },
            {
                "node": "threshold optimization",
                "feature_path": "Supervised Learning/Classification Algorithms/Logistic Regression/threshold optimization",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "optimize_threshold",
                        "path": "src/algorithms/supervised/classification/logistic_regression.py"
                    }
                ]
            },
            {
                "node": "Multi-label Classification",
                "feature_path": "Supervised Learning/Classification Algorithms/Multi-label Classification",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised/classification"
                    }
                ]
            },
            {
                "node": "classifier chains",
                "feature_path": "Supervised Learning/Classification Algorithms/Multi-label Classification/classifier chains",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ClassifierChainsClassifier",
                        "path": "src/algorithms/supervised/classification/multi_label.py"
                    }
                ]
            },
            {
                "node": "multi-label decision trees",
                "feature_path": "Supervised Learning/Classification Algorithms/Multi-label Classification/multi-label decision trees",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "MultiLabelDecisionTreeClassifier",
                        "path": "src/algorithms/supervised/classification/multi_label.py"
                    }
                ]
            },
            {
                "node": "multi-label knn",
                "feature_path": "Supervised Learning/Classification Algorithms/Multi-label Classification/multi-label knn",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "MultiLabelKNNClassifier",
                        "path": "src/algorithms/supervised/classification/multi_label.py"
                    }
                ]
            },
            {
                "node": "Naive Bayes",
                "feature_path": "Supervised Learning/Classification Algorithms/Naive Bayes",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised/classification"
                    }
                ]
            },
            {
                "node": "naive bayes",
                "feature_path": "Supervised Learning/Classification Algorithms/Naive Bayes/naive bayes",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "NaiveBayesClassifier",
                        "path": "src/algorithms/supervised/classification/naive_bayes.py"
                    }
                ]
            },
            {
                "node": "SVM Classification",
                "feature_path": "Supervised Learning/Classification Algorithms/SVM Classification",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised/classification"
                    }
                ]
            },
            {
                "node": "hard-margin svm",
                "feature_path": "Supervised Learning/Classification Algorithms/SVM Classification/hard-margin svm",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "HardMarginSVMClassifier",
                        "path": "src/algorithms/supervised/classification/svm_classification.py"
                    }
                ]
            },
            {
                "node": "kernel svm",
                "feature_path": "Supervised Learning/Classification Algorithms/SVM Classification/kernel svm",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "KernelSVMClassifier",
                        "path": "src/algorithms/supervised/classification/svm_classification.py"
                    }
                ]
            },
            {
                "node": "smo algorithm",
                "feature_path": "Supervised Learning/Classification Algorithms/SVM Classification/smo algorithm",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "SMOSVMOptimizer",
                        "path": "src/algorithms/optimization/svm_optimization.py"
                    }
                ]
            },
            {
                "node": "stochastic gradient descent",
                "feature_path": "Supervised Learning/Classification Algorithms/SVM Classification/stochastic gradient descent",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "SVMStochasticGradientDescentOptimizer",
                        "path": "src/algorithms/optimization/svm_optimization.py"
                    }
                ]
            },
            {
                "node": "support vector machines",
                "feature_path": "Supervised Learning/Classification Algorithms/SVM Classification/support vector machines",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "KernelSVMClassifier",
                        "path": "src/algorithms/supervised/classification/svm_classification.py"
                    }
                ]
            },
            {
                "node": "Regression Algorithms",
                "feature_path": "Supervised Learning/Regression Algorithms",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised/regression"
                    }
                ]
            },
            {
                "node": "Linear Regression",
                "feature_path": "Supervised Learning/Regression Algorithms/Linear Regression",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised/regression"
                    }
                ]
            },
            {
                "node": "linear regression",
                "feature_path": "Supervised Learning/Regression Algorithms/Linear Regression/linear regression",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "LinearRegression",
                        "path": "src/algorithms/supervised/regression/linear_regression.py"
                    }
                ]
            },
            {
                "node": "multiple linear regression",
                "feature_path": "Supervised Learning/Regression Algorithms/Linear Regression/multiple linear regression",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "LinearRegression",
                        "path": "src/algorithms/supervised/regression/linear_regression.py"
                    }
                ]
            },
            {
                "node": "ordinary least squares",
                "feature_path": "Supervised Learning/Regression Algorithms/Linear Regression/ordinary least squares",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "LinearRegression",
                        "path": "src/algorithms/supervised/regression/linear_regression.py"
                    }
                ]
            },
            {
                "node": "simple linear regression",
                "feature_path": "Supervised Learning/Regression Algorithms/Linear Regression/simple linear regression",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "LinearRegression",
                        "path": "src/algorithms/supervised/regression/linear_regression.py"
                    }
                ]
            },
            {
                "node": "Regularized Regression",
                "feature_path": "Supervised Learning/Regression Algorithms/Regularized Regression",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised/regression"
                    }
                ]
            },
            {
                "node": "feature selection",
                "feature_path": "Supervised Learning/Regression Algorithms/Regularized Regression/feature selection",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "regularized_regression_feature_selection",
                        "path": "src/algorithms/supervised/regression/regularized_regression.py"
                    }
                ]
            },
            {
                "node": "kernel ridge regression",
                "feature_path": "Supervised Learning/Regression Algorithms/Regularized Regression/kernel ridge regression",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "KernelRidgeRegression",
                        "path": "src/algorithms/supervised/regression/regularized_regression.py"
                    }
                ]
            },
            {
                "node": "l1 regularization",
                "feature_path": "Supervised Learning/Regression Algorithms/Regularized Regression/l1 regularization",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "regularized_regression_l1_penalty",
                        "path": "src/algorithms/supervised/regression/regularized_regression.py"
                    }
                ]
            },
            {
                "node": "l2 regularization",
                "feature_path": "Supervised Learning/Regression Algorithms/Regularized Regression/l2 regularization",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "l2_regularization_penalty",
                        "path": "src/algorithms/supervised/regression/regularized_regression.py"
                    }
                ]
            },
            {
                "node": "Semi-Supervised Learning",
                "feature_path": "Supervised Learning/Semi-Supervised Learning",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised"
                    }
                ]
            },
            {
                "node": "Semi-Supervised Techniques",
                "feature_path": "Supervised Learning/Semi-Supervised Learning/Semi-Supervised Techniques",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/supervised"
                    }
                ]
            },
            {
                "node": "co-training",
                "feature_path": "Supervised Learning/Semi-Supervised Learning/Semi-Supervised Techniques/co-training",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "CoTrainingClassifier",
                        "path": "src/algorithms/supervised/semi_supervised.py"
                    }
                ]
            },
            {
                "node": "self-training",
                "feature_path": "Supervised Learning/Semi-Supervised Learning/Semi-Supervised Techniques/self-training",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "SelfTrainingClassifier",
                        "path": "src/algorithms/supervised/semi_supervised.py"
                    }
                ]
            },
            {
                "node": "Tree-based and Ensemble Methods",
                "feature_path": "Tree-based and Ensemble Methods",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/tree_ensemble"
                    }
                ]
            },
            {
                "node": "Ensemble and Tree Algorithms",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/tree_ensemble"
                    }
                ]
            },
            {
                "node": "Decision Tree Methods",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Decision Tree Methods",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/tree_ensemble"
                    }
                ]
            },
            {
                "node": "cost complexity pruning",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Decision Tree Methods/cost complexity pruning",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "apply_cost_complexity_pruning",
                        "path": "src/algorithms/tree_ensemble/decision_tree_methods.py"
                    }
                ]
            },
            {
                "node": "depth limitation",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Decision Tree Methods/depth limitation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "apply_depth_limitation",
                        "path": "src/algorithms/tree_ensemble/decision_tree_methods.py"
                    }
                ]
            },
            {
                "node": "early stopping",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Decision Tree Methods/early stopping",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "apply_early_stopping",
                        "path": "src/algorithms/tree_ensemble/decision_tree_methods.py"
                    }
                ]
            },
            {
                "node": "node-limited pre-pruning",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Decision Tree Methods/node-limited pre-pruning",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "apply_node_limited_pre_pruning",
                        "path": "src/algorithms/tree_ensemble/decision_tree_methods.py"
                    }
                ]
            },
            {
                "node": "reduced error pruning",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Decision Tree Methods/reduced error pruning",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "apply_reduced_error_pruning",
                        "path": "src/algorithms/tree_ensemble/decision_tree_methods.py"
                    }
                ]
            },
            {
                "node": "Forest & Voting Methods",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Forest & Voting Methods",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/tree_ensemble"
                    }
                ]
            },
            {
                "node": "bagging",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Forest & Voting Methods/bagging",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "BaggingEnsemble",
                        "path": "src/algorithms/tree_ensemble/forest_voting_methods.py"
                    }
                ]
            },
            {
                "node": "binary classification",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Forest & Voting Methods/binary classification",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "BinaryVotingClassifier",
                        "path": "src/algorithms/tree_ensemble/forest_voting_methods.py"
                    }
                ]
            },
            {
                "node": "gradient boosting",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Forest & Voting Methods/gradient boosting",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "GradientBoostingEnsemble",
                        "path": "src/algorithms/tree_ensemble/forest_voting_methods.py"
                    }
                ]
            },
            {
                "node": "multi-class classification",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Forest & Voting Methods/multi-class classification",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "MultiClassVotingClassifier",
                        "path": "src/algorithms/tree_ensemble/forest_voting_methods.py"
                    }
                ]
            },
            {
                "node": "quantile regression",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Forest & Voting Methods/quantile regression",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "QuantileRegressionForest",
                        "path": "src/algorithms/tree_ensemble/forest_voting_methods.py"
                    }
                ]
            },
            {
                "node": "random forest",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Forest & Voting Methods/random forest",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "RandomForestEnsemble",
                        "path": "src/algorithms/tree_ensemble/forest_voting_methods.py"
                    }
                ]
            },
            {
                "node": "voting",
                "feature_path": "Tree-based and Ensemble Methods/Ensemble and Tree Algorithms/Forest & Voting Methods/voting",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "VotingEnsemble",
                        "path": "src/algorithms/tree_ensemble/forest_voting_methods.py"
                    }
                ]
            },
            {
                "node": "Unsupervised Learning",
                "feature_path": "Unsupervised Learning",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/unsupervised"
                    }
                ]
            },
            {
                "node": "Anomaly and Self-Organizing",
                "feature_path": "Unsupervised Learning/Anomaly and Self-Organizing",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/unsupervised"
                    }
                ]
            },
            {
                "node": "Anomaly Detection",
                "feature_path": "Unsupervised Learning/Anomaly and Self-Organizing/Anomaly Detection",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/unsupervised"
                    }
                ]
            },
            {
                "node": "isolation forest",
                "feature_path": "Unsupervised Learning/Anomaly and Self-Organizing/Anomaly Detection/isolation forest",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "IsolationForestAnomalyDetector",
                        "path": "src/algorithms/unsupervised/anomaly_detection.py"
                    }
                ]
            },
            {
                "node": "local outlier factor",
                "feature_path": "Unsupervised Learning/Anomaly and Self-Organizing/Anomaly Detection/local outlier factor",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "LocalOutlierFactorAnomalyDetector",
                        "path": "src/algorithms/unsupervised/anomaly_detection.py"
                    }
                ]
            },
            {
                "node": "one-class svm",
                "feature_path": "Unsupervised Learning/Anomaly and Self-Organizing/Anomaly Detection/one-class svm",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "OneClassSVMAnomalyDetector",
                        "path": "src/algorithms/unsupervised/anomaly_detection.py"
                    }
                ]
            },
            {
                "node": "Self-Organizing Maps",
                "feature_path": "Unsupervised Learning/Anomaly and Self-Organizing/Self-Organizing Maps",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/unsupervised"
                    }
                ]
            },
            {
                "node": "learning rate",
                "feature_path": "Unsupervised Learning/Anomaly and Self-Organizing/Self-Organizing Maps/learning rate",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "SelfOrganizingMap",
                        "path": "src/algorithms/unsupervised/self_organizing_maps.py"
                    }
                ]
            },
            {
                "node": "topology preservation",
                "feature_path": "Unsupervised Learning/Anomaly and Self-Organizing/Self-Organizing Maps/topology preservation",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "SelfOrganizingMap",
                        "path": "src/algorithms/unsupervised/self_organizing_maps.py"
                    }
                ]
            },
            {
                "node": "Clustering",
                "feature_path": "Unsupervised Learning/Clustering",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/unsupervised/clustering"
                    }
                ]
            },
            {
                "node": "Hierarchical & Density Clustering",
                "feature_path": "Unsupervised Learning/Clustering/Hierarchical & Density Clustering",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/unsupervised/clustering"
                    }
                ]
            },
            {
                "node": "agglomerative",
                "feature_path": "Unsupervised Learning/Clustering/Hierarchical & Density Clustering/agglomerative",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "AgglomerativeClustering",
                        "path": "src/algorithms/unsupervised/clustering/hierarchical_density.py"
                    }
                ]
            },
            {
                "node": "density-based clustering",
                "feature_path": "Unsupervised Learning/Clustering/Hierarchical & Density Clustering/density-based clustering",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "DensityBasedClustering",
                        "path": "src/algorithms/unsupervised/clustering/hierarchical_density.py"
                    }
                ]
            },
            {
                "node": "divisive",
                "feature_path": "Unsupervised Learning/Clustering/Hierarchical & Density Clustering/divisive",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "DivisiveClustering",
                        "path": "src/algorithms/unsupervised/clustering/hierarchical_density.py"
                    }
                ]
            },
            {
                "node": "K-means Clustering",
                "feature_path": "Unsupervised Learning/Clustering/K-means Clustering",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/unsupervised/clustering"
                    }
                ]
            },
            {
                "node": "centroid initialization",
                "feature_path": "Unsupervised Learning/Clustering/K-means Clustering/centroid initialization",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "KMeansInitializer",
                        "path": "src/algorithms/unsupervised/clustering/k_means.py"
                    }
                ]
            },
            {
                "node": "convergence criteria",
                "feature_path": "Unsupervised Learning/Clustering/K-means Clustering/convergence criteria",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "KMeansOptimizer",
                        "path": "src/algorithms/unsupervised/clustering/k_means.py"
                    }
                ]
            },
            {
                "node": "elbow method",
                "feature_path": "Unsupervised Learning/Clustering/K-means Clustering/elbow method",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "KMeansOptimizer",
                        "path": "src/algorithms/unsupervised/clustering/k_means.py"
                    }
                ]
            },
            {
                "node": "fuzzy k-means",
                "feature_path": "Unsupervised Learning/Clustering/K-means Clustering/fuzzy k-means",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "FuzzyKMeansClustering",
                        "path": "src/algorithms/unsupervised/clustering/k_means.py"
                    }
                ]
            },
            {
                "node": "initialization methods",
                "feature_path": "Unsupervised Learning/Clustering/K-means Clustering/initialization methods",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "KMeansInitializer",
                        "path": "src/algorithms/unsupervised/clustering/k_means.py"
                    }
                ]
            },
            {
                "node": "k-means clustering",
                "feature_path": "Unsupervised Learning/Clustering/K-means Clustering/k-means clustering",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "KMeansClustering",
                        "path": "src/algorithms/unsupervised/clustering/k_means.py"
                    }
                ]
            },
            {
                "node": "k-means++ initialization",
                "feature_path": "Unsupervised Learning/Clustering/K-means Clustering/k-means++ initialization",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "KMeansInitializer",
                        "path": "src/algorithms/unsupervised/clustering/k_means.py"
                    }
                ]
            },
            {
                "node": "k-medoids",
                "feature_path": "Unsupervised Learning/Clustering/K-means Clustering/k-medoids",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "KMedoidsClustering",
                        "path": "src/algorithms/unsupervised/clustering/k_means.py"
                    }
                ]
            },
            {
                "node": "mini-batch k-means",
                "feature_path": "Unsupervised Learning/Clustering/K-means Clustering/mini-batch k-means",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "MiniBatchKMeansClustering",
                        "path": "src/algorithms/unsupervised/clustering/k_means.py"
                    }
                ]
            },
            {
                "node": "optimize clusters",
                "feature_path": "Unsupervised Learning/Clustering/K-means Clustering/optimize clusters",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "KMeansOptimizer",
                        "path": "src/algorithms/unsupervised/clustering/k_means.py"
                    }
                ]
            },
            {
                "node": "spectral clustering",
                "feature_path": "Unsupervised Learning/Clustering/K-means Clustering/spectral clustering",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "SpectralClustering",
                        "path": "src/algorithms/unsupervised/clustering/k_means.py"
                    }
                ]
            },
            {
                "node": "Dimensionality Reduction",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction"
                    }
                ]
            },
            {
                "node": "Other Reduction Methods",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/Other Reduction Methods",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction"
                    }
                ]
            },
            {
                "node": "latent topics",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/Other Reduction Methods/latent topics",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "LDATopicModeler",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/other_methods.py"
                    }
                ]
            },
            {
                "node": "lda",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/Other Reduction Methods/lda",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "LDATopicModeler",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/other_methods.py"
                    }
                ]
            },
            {
                "node": "min_dist parameter",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/Other Reduction Methods/min_dist parameter",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "UMAPReducer",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/other_methods.py"
                    }
                ]
            },
            {
                "node": "number of neighbors",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/Other Reduction Methods/number of neighbors",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "UMAPReducer",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/other_methods.py"
                    }
                ]
            },
            {
                "node": "t-sne",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/Other Reduction Methods/t-sne",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "TSNEReducer",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/other_methods.py"
                    }
                ]
            },
            {
                "node": "topic distribution",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/Other Reduction Methods/topic distribution",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "LDATopicModeler",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/other_methods.py"
                    }
                ]
            },
            {
                "node": "umap",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/Other Reduction Methods/umap",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "UMAPReducer",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/other_methods.py"
                    }
                ]
            },
            {
                "node": "PCA Methods",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/PCA Methods",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction"
                    }
                ]
            },
            {
                "node": "dimensionality reduction",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/PCA Methods/dimensionality reduction",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "StandardPCA",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/pca_methods.py"
                    }
                ]
            },
            {
                "node": "eigen decomposition",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/PCA Methods/eigen decomposition",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "StandardPCA",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/pca_methods.py"
                    }
                ]
            },
            {
                "node": "incremental pca",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/PCA Methods/incremental pca",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "IncrementalPCA",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/pca_methods.py"
                    }
                ]
            },
            {
                "node": "kernel pca",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/PCA Methods/kernel pca",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "KernelPCA",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/pca_methods.py"
                    }
                ]
            },
            {
                "node": "singular value decomposition",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/PCA Methods/singular value decomposition",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "StandardPCA",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/pca_methods.py"
                    }
                ]
            },
            {
                "node": "sparse pca",
                "feature_path": "Unsupervised Learning/Dimensionality Reduction/PCA Methods/sparse pca",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "SparsePCA",
                        "path": "src/algorithms/unsupervised/dimensionality_reduction/pca_methods.py"
                    }
                ]
            }
        ],
        "Workflow": [
            {
                "node": "Evaluation",
                "feature_path": "Evaluation",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/workflow/evaluation"
                    }
                ]
            },
            {
                "node": "Accuracy Metrics",
                "feature_path": "Evaluation/Accuracy Metrics",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/workflow/evaluation"
                    }
                ]
            },
            {
                "node": "F1 Score",
                "feature_path": "Evaluation/Accuracy Metrics/F1 Score",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/workflow/evaluation"
                    }
                ]
            },
            {
                "node": "f1 score",
                "feature_path": "Evaluation/Accuracy Metrics/F1 Score/f1 score",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "compute_f1_score",
                        "path": "src/workflow/evaluation/accuracy.py"
                    }
                ]
            },
            {
                "node": "Performance Metrics",
                "feature_path": "Evaluation/Performance Metrics",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/workflow/evaluation"
                    }
                ]
            },
            {
                "node": "Confusion Matrix",
                "feature_path": "Evaluation/Performance Metrics/Confusion Matrix",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/workflow/evaluation"
                    }
                ]
            },
            {
                "node": "confusion matrix",
                "feature_path": "Evaluation/Performance Metrics/Confusion Matrix/confusion matrix",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "compute_confusion_matrix",
                        "path": "src/workflow/evaluation/performance.py"
                    }
                ]
            },
            {
                "node": "Preprocessing",
                "feature_path": "Preprocessing",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/workflow/preprocessing/feature_engineering"
                    }
                ]
            },
            {
                "node": "Feature Engineering",
                "feature_path": "Preprocessing/Feature Engineering",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/workflow/preprocessing/feature_engineering"
                    }
                ]
            },
            {
                "node": "Data Augmentation",
                "feature_path": "Preprocessing/Feature Engineering/Data Augmentation",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/workflow/preprocessing/feature_engineering"
                    }
                ]
            },
            {
                "node": "image augmentation",
                "feature_path": "Preprocessing/Feature Engineering/Data Augmentation/image augmentation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "augment_image_data",
                        "path": "src/workflow/preprocessing/feature_engineering/data_augmentation.py"
                    }
                ]
            },
            {
                "node": "text augmentation",
                "feature_path": "Preprocessing/Feature Engineering/Data Augmentation/text augmentation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "augment_text_data",
                        "path": "src/workflow/preprocessing/feature_engineering/data_augmentation.py"
                    }
                ]
            },
            {
                "node": "Data Transformation",
                "feature_path": "Preprocessing/Feature Engineering/Data Transformation",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/workflow/preprocessing/feature_engineering"
                    }
                ]
            },
            {
                "node": "one-hot encoding",
                "feature_path": "Preprocessing/Feature Engineering/Data Transformation/one-hot encoding",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "apply_onehot_encoding",
                        "path": "src/workflow/preprocessing/feature_engineering/data_transformation.py"
                    }
                ]
            },
            {
                "node": "scaling and normalization",
                "feature_path": "Preprocessing/Feature Engineering/Data Transformation/scaling and normalization",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "scale_and_normalize_features",
                        "path": "src/workflow/preprocessing/feature_engineering/data_transformation.py"
                    }
                ]
            },
            {
                "node": "Feature Extraction",
                "feature_path": "Preprocessing/Feature Engineering/Feature Extraction",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/workflow/preprocessing/feature_engineering"
                    }
                ]
            },
            {
                "node": "pca",
                "feature_path": "Preprocessing/Feature Engineering/Feature Extraction/pca",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "extract_pca_features",
                        "path": "src/workflow/preprocessing/feature_engineering/feature_extraction.py"
                    }
                ]
            },
            {
                "node": "Normalization",
                "feature_path": "Preprocessing/Normalization",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/workflow/preprocessing/normalization"
                    }
                ]
            },
            {
                "node": "Z-score Normalization",
                "feature_path": "Preprocessing/Normalization/Z-score Normalization",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/workflow/preprocessing/normalization"
                    }
                ]
            },
            {
                "node": "normalize to mean 0 and std 1",
                "feature_path": "Preprocessing/Normalization/Z-score Normalization/normalize to mean 0 and std 1",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "normalize_z_score",
                        "path": "src/workflow/preprocessing/normalization/z_score.py"
                    }
                ]
            }
        ],
        "Data Engineering": [
            {
                "node": "Data Encoding",
                "feature_path": "Data Encoding",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_encoding"
                    }
                ]
            },
            {
                "node": "Binary Encoding",
                "feature_path": "Data Encoding/Binary Encoding",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_encoding"
                    }
                ]
            },
            {
                "node": "Details",
                "feature_path": "Data Encoding/Binary Encoding/Details",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_encoding"
                    }
                ]
            },
            {
                "node": "compressed binary encoding",
                "feature_path": "Data Encoding/Binary Encoding/Details/compressed binary encoding",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "compress_binary_encoding",
                        "path": "src/data_engineering/data_encoding/binary_encoding.py"
                    }
                ]
            },
            {
                "node": "Label Encoding",
                "feature_path": "Data Encoding/Label Encoding",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_encoding"
                    }
                ]
            },
            {
                "node": "Details",
                "feature_path": "Data Encoding/Label Encoding/Details",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_encoding"
                    }
                ]
            },
            {
                "node": "frequency-based label encoding",
                "feature_path": "Data Encoding/Label Encoding/Details/frequency-based label encoding",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "frequency_based_label_encoding",
                        "path": "src/data_engineering/data_encoding/label_encoding.py"
                    }
                ]
            },
            {
                "node": "ordinal label encoding",
                "feature_path": "Data Encoding/Label Encoding/Details/ordinal label encoding",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "ordinal_label_encoding",
                        "path": "src/data_engineering/data_encoding/label_encoding.py"
                    }
                ]
            },
            {
                "node": "One-hot Encoding",
                "feature_path": "Data Encoding/One-hot Encoding",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_encoding"
                    }
                ]
            },
            {
                "node": "Combined One-hot",
                "feature_path": "Data Encoding/One-hot Encoding/Combined One-hot",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_encoding"
                    }
                ]
            },
            {
                "node": "dense one-hot encoding",
                "feature_path": "Data Encoding/One-hot Encoding/Combined One-hot/dense one-hot encoding",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "CombinedOneHotEncoder",
                        "path": "src/data_engineering/data_encoding/onehot_encoding.py"
                    }
                ]
            },
            {
                "node": "sparse matrix optimization",
                "feature_path": "Data Encoding/One-hot Encoding/Combined One-hot/sparse matrix optimization",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "CombinedOneHotEncoder",
                        "path": "src/data_engineering/data_encoding/onehot_encoding.py"
                    }
                ]
            },
            {
                "node": "Data Preparation",
                "feature_path": "Data Preparation",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation"
                    }
                ]
            },
            {
                "node": "Data Aggregation & Profiling",
                "feature_path": "Data Preparation/Data Aggregation & Profiling",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/aggregation"
                    }
                ]
            },
            {
                "node": "Aggregation",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Aggregation",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/aggregation"
                    }
                ]
            },
            {
                "node": "group and count",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Aggregation/group and count",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "group_and_count",
                        "path": "src/data_engineering/data_preparation/aggregation/aggregation.py"
                    }
                ]
            },
            {
                "node": "mean",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Aggregation/mean",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "aggregate_mean",
                        "path": "src/data_engineering/data_preparation/aggregation/aggregation.py"
                    }
                ]
            },
            {
                "node": "median",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Aggregation/median",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "aggregate_median",
                        "path": "src/data_engineering/data_preparation/aggregation/aggregation.py"
                    }
                ]
            },
            {
                "node": "Bucketization",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Bucketization",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/aggregation"
                    }
                ]
            },
            {
                "node": "bucketize by custom bins",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Bucketization/bucketize by custom bins",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "bucketize_by_custom_bins",
                        "path": "src/data_engineering/data_preparation/aggregation/bucketization.py"
                    }
                ]
            },
            {
                "node": "bucketize by quantiles",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Bucketization/bucketize by quantiles",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "bucketize_by_quantiles",
                        "path": "src/data_engineering/data_preparation/aggregation/bucketization.py"
                    }
                ]
            },
            {
                "node": "bucketize by range",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Bucketization/bucketize by range",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "bucketize_by_range",
                        "path": "src/data_engineering/data_preparation/aggregation/bucketization.py"
                    }
                ]
            },
            {
                "node": "dynamic bucketization",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Bucketization/dynamic bucketization",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "dynamic_bucketization",
                        "path": "src/data_engineering/data_preparation/aggregation/bucketization.py"
                    }
                ]
            },
            {
                "node": "Profiling",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Profiling",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/aggregation"
                    }
                ]
            },
            {
                "node": "correlation analysis",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Profiling/correlation analysis",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "analyze_correlation",
                        "path": "src/data_engineering/data_preparation/aggregation/profiling.py"
                    }
                ]
            },
            {
                "node": "Zero Column Handling",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Zero Column Handling",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/aggregation"
                    }
                ]
            },
            {
                "node": "drop columns with mostly zeros",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Zero Column Handling/drop columns with mostly zeros",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "drop_columns_with_mostly_zeros",
                        "path": "src/data_engineering/data_preparation/aggregation/zero_column.py"
                    }
                ]
            },
            {
                "node": "drop columns with zero variance",
                "feature_path": "Data Preparation/Data Aggregation & Profiling/Zero Column Handling/drop columns with zero variance",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "drop_columns_with_zero_variance",
                        "path": "src/data_engineering/data_preparation/aggregation/zero_column.py"
                    }
                ]
            },
            {
                "node": "Data Cleaning",
                "feature_path": "Data Preparation/Data Cleaning",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/cleaning"
                    }
                ]
            },
            {
                "node": "Initial Cleaning",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/cleaning"
                    }
                ]
            },
            {
                "node": "clip values",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/clip values",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "clip_dataframe_values",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "convert text to number",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/convert text to number",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "convert_text_to_number",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "convert to appropriate types",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/convert to appropriate types",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "convert_to_appropriate_types",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "convert units",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/convert units",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "convert_units",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "correct data inconsistencies",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/correct data inconsistencies",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "correct_data_inconsistencies",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "detect using clustering",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/detect using clustering",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "detect_outliers_using_clustering",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "drop columns with missing",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/drop columns with missing",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "drop_columns_with_missing",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "drop null columns",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/drop null columns",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "drop_null_columns",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "drop rows",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/drop rows",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "drop_rows",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "dropna",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/dropna",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "dropna_values",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "fill with constant",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/fill with constant",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "fill_with_constant",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "remove by standard deviation",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/remove by standard deviation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "remove_by_standard_deviation",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "remove outlier rows",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/remove outlier rows",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "remove_outlier_rows",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "remove top 1%",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/remove top 1%",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "remove_top_percent",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "replace with default value",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/replace with default value",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "replace_with_default_value",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "reset and drop old index",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/reset and drop old index",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "reset_and_drop_old_index",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "reset index to default",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/reset index to default",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "reset_index_to_default",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "standardize date formats",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/standardize date formats",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "standardize_date_formats",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "standardize numeric formats",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/standardize numeric formats",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "standardize_numeric_formats",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "standardize string data",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/standardize string data",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "standardize_string_data",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "tag outliers",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/tag outliers",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "tag_outliers",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "use forward fill",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/use forward fill",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "use_forward_fill",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "use iqr method",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/use iqr method",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "use_iqr_method",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "use z-score method",
                "feature_path": "Data Preparation/Data Cleaning/Initial Cleaning/use z-score method",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "use_z_score_method",
                        "path": "src/data_engineering/data_preparation/cleaning/initial_cleaning.py"
                    }
                ]
            },
            {
                "node": "Supplementary Adjustments",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/cleaning"
                    }
                ]
            },
            {
                "node": "active learning strategies",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/active learning strategies",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "apply_active_learning_strategy",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "convert to integer",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/convert to integer",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "DataConversionScaler",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "convert to ordinal",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/convert to ordinal",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "DataConversionScaler",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "correct data entry errors",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/correct data entry errors",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ConsistencyCorrector",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "correct typos",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/correct typos",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ConsistencyCorrector",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "decimal scaling",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/decimal scaling",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "DataConversionScaler",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "drop columns with all zeros",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/drop columns with all zeros",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ZeroColumnHandler",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "drop duplicate columns",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/drop duplicate columns",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "DuplicateCleaner",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "enforce consistency rules",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/enforce consistency rules",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ConsistencyCorrector",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "fill with custom value",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/fill with custom value",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "CategoricalCleaner",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "fill with zero",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/fill with zero",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "CategoricalCleaner",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "filter based on percentile",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/filter based on percentile",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "OutlierFilter",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "filter by threshold",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/filter by threshold",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "OutlierFilter",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "filter high outliers",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/filter high outliers",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "OutlierFilter",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "fix inconsistent data formats",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/fix inconsistent data formats",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ConsistencyCorrector",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "fuzzy deduplication",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/fuzzy deduplication",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "DuplicateCleaner",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "identify outliers",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/identify outliers",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "OutlierFilter",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "identify zero columns",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/identify zero columns",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ZeroColumnHandler",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "keep first",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/keep first",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "DuplicateCleaner",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "remove based on iqr",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/remove based on iqr",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "OutlierFilter",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "remove exact duplicates",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/remove exact duplicates",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "DuplicateCleaner",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "remove special characters",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/remove special characters",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "CategoricalCleaner",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "resolve conflicting data",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/resolve conflicting data",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ConsistencyCorrector",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "standardize categorical data",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/standardize categorical data",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "CategoricalCleaner",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "standardize using robust scaling",
                "feature_path": "Data Preparation/Data Cleaning/Supplementary Adjustments/standardize using robust scaling",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "DataConversionScaler",
                        "path": "src/data_engineering/data_preparation/cleaning/supplementary_cleaning.py"
                    }
                ]
            },
            {
                "node": "Feature Engineering",
                "feature_path": "Data Preparation/Feature Engineering",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/feature_engineering"
                    }
                ]
            },
            {
                "node": "Combine Features",
                "feature_path": "Data Preparation/Feature Engineering/Combine Features",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/feature_engineering"
                    }
                ]
            },
            {
                "node": "aggregate features",
                "feature_path": "Data Preparation/Feature Engineering/Combine Features/aggregate features",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "aggregate_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/combine_features.py"
                    }
                ]
            },
            {
                "node": "combine categorical features",
                "feature_path": "Data Preparation/Feature Engineering/Combine Features/combine categorical features",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "combine_categorical_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/combine_features.py"
                    }
                ]
            },
            {
                "node": "combine numerical features",
                "feature_path": "Data Preparation/Feature Engineering/Combine Features/combine numerical features",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "combine_numerical_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/combine_features.py"
                    }
                ]
            },
            {
                "node": "concatenate features",
                "feature_path": "Data Preparation/Feature Engineering/Combine Features/concatenate features",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "concatenate_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/combine_features.py"
                    }
                ]
            },
            {
                "node": "merge feature sets",
                "feature_path": "Data Preparation/Feature Engineering/Combine Features/merge feature sets",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "merge_feature_sets",
                        "path": "src/data_engineering/data_preparation/feature_engineering/combine_features.py"
                    }
                ]
            },
            {
                "node": "Create New Features",
                "feature_path": "Data Preparation/Feature Engineering/Create New Features",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/feature_engineering"
                    }
                ]
            },
            {
                "node": "create features from date",
                "feature_path": "Data Preparation/Feature Engineering/Create New Features/create features from date",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "create_date_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/create_features.py"
                    }
                ]
            },
            {
                "node": "create features from existing data",
                "feature_path": "Data Preparation/Feature Engineering/Create New Features/create features from existing data",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "create_existing_data_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/create_features.py"
                    }
                ]
            },
            {
                "node": "create features from external data",
                "feature_path": "Data Preparation/Feature Engineering/Create New Features/create features from external data",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "create_external_data_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/create_features.py"
                    }
                ]
            },
            {
                "node": "derive new metrics",
                "feature_path": "Data Preparation/Feature Engineering/Create New Features/derive new metrics",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "derive_new_metrics",
                        "path": "src/data_engineering/data_preparation/feature_engineering/create_features.py"
                    }
                ]
            },
            {
                "node": "generate ratios",
                "feature_path": "Data Preparation/Feature Engineering/Create New Features/generate ratios",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "generate_ratios",
                        "path": "src/data_engineering/data_preparation/feature_engineering/create_features.py"
                    }
                ]
            },
            {
                "node": "location-based features",
                "feature_path": "Data Preparation/Feature Engineering/Create New Features/location-based features",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "create_location_based_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/create_features.py"
                    }
                ]
            },
            {
                "node": "time-based features",
                "feature_path": "Data Preparation/Feature Engineering/Create New Features/time-based features",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "create_time_based_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/create_features.py"
                    }
                ]
            },
            {
                "node": "Feature Extraction",
                "feature_path": "Data Preparation/Feature Engineering/Feature Extraction",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/feature_engineering"
                    }
                ]
            },
            {
                "node": "extract categorical features",
                "feature_path": "Data Preparation/Feature Engineering/Feature Extraction/extract categorical features",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "extract_categorical_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_extraction.py"
                    }
                ]
            },
            {
                "node": "extract features from text",
                "feature_path": "Data Preparation/Feature Engineering/Feature Extraction/extract features from text",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "extract_text_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_extraction.py"
                    }
                ]
            },
            {
                "node": "extract numerical features",
                "feature_path": "Data Preparation/Feature Engineering/Feature Extraction/extract numerical features",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "extract_numerical_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_extraction.py"
                    }
                ]
            },
            {
                "node": "image feature extraction",
                "feature_path": "Data Preparation/Feature Engineering/Feature Extraction/image feature extraction",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "extract_image_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_extraction.py"
                    }
                ]
            },
            {
                "node": "Feature Scaling",
                "feature_path": "Data Preparation/Feature Engineering/Feature Scaling",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/feature_engineering"
                    }
                ]
            },
            {
                "node": "min-max scaling",
                "feature_path": "Data Preparation/Feature Engineering/Feature Scaling/min-max scaling",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "scale_features_to_range",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_scaling.py"
                    }
                ]
            },
            {
                "node": "scale features to range",
                "feature_path": "Data Preparation/Feature Engineering/Feature Scaling/scale features to range",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "scale_features_to_range",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_scaling.py"
                    }
                ]
            },
            {
                "node": "standard scaling",
                "feature_path": "Data Preparation/Feature Engineering/Feature Scaling/standard scaling",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "standard_scale_features",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_scaling.py"
                    }
                ]
            },
            {
                "node": "Feature Selection & Reduction",
                "feature_path": "Data Preparation/Feature Engineering/Feature Selection & Reduction",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/feature_engineering"
                    }
                ]
            },
            {
                "node": "feature importance ranking",
                "feature_path": "Data Preparation/Feature Engineering/Feature Selection & Reduction/feature importance ranking",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "FilterFeatureSelector",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_selection.py"
                    }
                ]
            },
            {
                "node": "filter methods",
                "feature_path": "Data Preparation/Feature Engineering/Feature Selection & Reduction/filter methods",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "FilterFeatureSelector",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_selection.py"
                    }
                ]
            },
            {
                "node": "recursive feature elimination",
                "feature_path": "Data Preparation/Feature Engineering/Feature Selection & Reduction/recursive feature elimination",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "recursive_feature_elimination",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_selection.py"
                    }
                ]
            },
            {
                "node": "select features with high correlation",
                "feature_path": "Data Preparation/Feature Engineering/Feature Selection & Reduction/select features with high correlation",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "FilterFeatureSelector",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_selection.py"
                    }
                ]
            },
            {
                "node": "select features with low variance",
                "feature_path": "Data Preparation/Feature Engineering/Feature Selection & Reduction/select features with low variance",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "FilterFeatureSelector",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_selection.py"
                    }
                ]
            },
            {
                "node": "select with chi-squared",
                "feature_path": "Data Preparation/Feature Engineering/Feature Selection & Reduction/select with chi-squared",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "FilterFeatureSelector",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_selection.py"
                    }
                ]
            },
            {
                "node": "select with mutual information",
                "feature_path": "Data Preparation/Feature Engineering/Feature Selection & Reduction/select with mutual information",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "FilterFeatureSelector",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_selection.py"
                    }
                ]
            },
            {
                "node": "wrapper methods",
                "feature_path": "Data Preparation/Feature Engineering/Feature Selection & Reduction/wrapper methods",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "wrapper_feature_selection",
                        "path": "src/data_engineering/data_preparation/feature_engineering/feature_selection.py"
                    }
                ]
            },
            {
                "node": "Interaction Terms",
                "feature_path": "Data Preparation/Feature Engineering/Interaction Terms",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/feature_engineering"
                    }
                ]
            },
            {
                "node": "categorical interaction terms",
                "feature_path": "Data Preparation/Feature Engineering/Interaction Terms/categorical interaction terms",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "InteractionTermsGenerator",
                        "path": "src/data_engineering/data_preparation/feature_engineering/interaction_terms.py"
                    }
                ]
            },
            {
                "node": "create multiplicative terms",
                "feature_path": "Data Preparation/Feature Engineering/Interaction Terms/create multiplicative terms",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "InteractionTermsGenerator",
                        "path": "src/data_engineering/data_preparation/feature_engineering/interaction_terms.py"
                    }
                ]
            },
            {
                "node": "create polynomial terms",
                "feature_path": "Data Preparation/Feature Engineering/Interaction Terms/create polynomial terms",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "InteractionTermsGenerator",
                        "path": "src/data_engineering/data_preparation/feature_engineering/interaction_terms.py"
                    }
                ]
            },
            {
                "node": "create ratio terms",
                "feature_path": "Data Preparation/Feature Engineering/Interaction Terms/create ratio terms",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "InteractionTermsGenerator",
                        "path": "src/data_engineering/data_preparation/feature_engineering/interaction_terms.py"
                    }
                ]
            },
            {
                "node": "Polynomial Features",
                "feature_path": "Data Preparation/Feature Engineering/Polynomial Features",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/feature_engineering"
                    }
                ]
            },
            {
                "node": "create polynomial features of degree 2",
                "feature_path": "Data Preparation/Feature Engineering/Polynomial Features/create polynomial features of degree 2",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "PolynomialFeaturesGenerator",
                        "path": "src/data_engineering/data_preparation/feature_engineering/polynomial_features.py"
                    }
                ]
            },
            {
                "node": "create third-order terms",
                "feature_path": "Data Preparation/Feature Engineering/Polynomial Features/create third-order terms",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "PolynomialFeaturesGenerator",
                        "path": "src/data_engineering/data_preparation/feature_engineering/polynomial_features.py"
                    }
                ]
            },
            {
                "node": "generate higher-order terms",
                "feature_path": "Data Preparation/Feature Engineering/Polynomial Features/generate higher-order terms",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "PolynomialFeaturesGenerator",
                        "path": "src/data_engineering/data_preparation/feature_engineering/polynomial_features.py"
                    }
                ]
            },
            {
                "node": "Imputation Techniques",
                "feature_path": "Data Preparation/Imputation Techniques",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/imputation"
                    }
                ]
            },
            {
                "node": "Imputation Methods",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_preparation/imputation"
                    }
                ]
            },
            {
                "node": "Weighted mean",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/Weighted mean",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "weighted_mean_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "conditional mean imputation",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/conditional mean imputation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "conditional_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "conditional median imputation",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/conditional median imputation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "conditional_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "delete columns",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/delete columns",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "delete_columns",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "delete incomplete records",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/delete incomplete records",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "delete_incomplete_records",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "drop based on percentage missing",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/drop based on percentage missing",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "drop_columns_based_on_percentage",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "flag outliers",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/flag outliers",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "flag_outliers",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "flag rows with missing values",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/flag rows with missing values",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "flag_missing_rows",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "handle large datasets for mode imputation",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/handle large datasets for mode imputation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "optimized_mode_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "identify missing",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/identify missing",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "identify_missing",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "impute by group mean",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/impute by group mean",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "group_based_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "impute by group median",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/impute by group median",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "group_based_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "impute categorical columns",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/impute categorical columns",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "categorical_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "impute missing binary data with mode",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/impute missing binary data with mode",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "binary_mode_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "impute using local median",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/impute using local median",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "local_median_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "impute with column median",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/impute with column median",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "column_median_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "impute with conditional mode",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/impute with conditional mode",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "conditional_mode_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "impute with global mean",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/impute with global mean",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "global_mean_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "impute with global median",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/impute with global median",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "global_median_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "impute with mode",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/impute with mode",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "mode_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "knn imputation",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/knn imputation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "knn_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "linear interpolation",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/linear interpolation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "linear_interpolation_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "mode imputation for numbers",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/mode imputation for numbers",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "mode_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "mode of subset of dataset",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/mode of subset of dataset",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "mode_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "model-based imputation",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/model-based imputation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "model_based_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "pairwise deletion",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/pairwise deletion",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "pairwise_deletion",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "polynomial interpolation",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/polynomial interpolation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "polynomial_interpolation_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "simple imputation",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/simple imputation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "simple_imputation",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "threshold-based removal",
                "feature_path": "Data Preparation/Imputation Techniques/Imputation Methods/threshold-based removal",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "threshold_based_removal",
                        "path": "src/data_engineering/data_preparation/imputation/imputation_methods.py"
                    }
                ]
            },
            {
                "node": "Data Splitting",
                "feature_path": "Data Splitting",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_splitting"
                    }
                ]
            },
            {
                "node": "Temporal Split",
                "feature_path": "Data Splitting/Temporal Split",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_splitting"
                    }
                ]
            },
            {
                "node": "Cross-validation Temporal Split",
                "feature_path": "Data Splitting/Temporal Split/Cross-validation Temporal Split",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_splitting"
                    }
                ]
            },
            {
                "node": "cross-validation with event windows",
                "feature_path": "Data Splitting/Temporal Split/Cross-validation Temporal Split/cross-validation with event windows",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "CVTemporalSplitter",
                        "path": "src/data_engineering/data_splitting/cv_temporal.py"
                    }
                ]
            },
            {
                "node": "cross-validation with time windows",
                "feature_path": "Data Splitting/Temporal Split/Cross-validation Temporal Split/cross-validation with time windows",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "CVTemporalSplitter",
                        "path": "src/data_engineering/data_splitting/cv_temporal.py"
                    }
                ]
            },
            {
                "node": "time-series cross-validation",
                "feature_path": "Data Splitting/Temporal Split/Cross-validation Temporal Split/time-series cross-validation",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "CVTemporalSplitter",
                        "path": "src/data_engineering/data_splitting/cv_temporal.py"
                    }
                ]
            },
            {
                "node": "Event-based Split",
                "feature_path": "Data Splitting/Temporal Split/Event-based Split",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_splitting"
                    }
                ]
            },
            {
                "node": "split by event count",
                "feature_path": "Data Splitting/Temporal Split/Event-based Split/split by event count",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "EventBasedSplitter",
                        "path": "src/data_engineering/data_splitting/event_based.py"
                    }
                ]
            },
            {
                "node": "split by event frequency",
                "feature_path": "Data Splitting/Temporal Split/Event-based Split/split by event frequency",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "EventBasedSplitter",
                        "path": "src/data_engineering/data_splitting/event_based.py"
                    }
                ]
            },
            {
                "node": "split by event types",
                "feature_path": "Data Splitting/Temporal Split/Event-based Split/split by event types",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "EventBasedSplitter",
                        "path": "src/data_engineering/data_splitting/event_based.py"
                    }
                ]
            },
            {
                "node": "Time-based Split",
                "feature_path": "Data Splitting/Temporal Split/Time-based Split",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_splitting"
                    }
                ]
            },
            {
                "node": "split by day",
                "feature_path": "Data Splitting/Temporal Split/Time-based Split/split by day",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "TimeBasedSplitter",
                        "path": "src/data_engineering/data_splitting/time_based.py"
                    }
                ]
            },
            {
                "node": "split by hour",
                "feature_path": "Data Splitting/Temporal Split/Time-based Split/split by hour",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "TimeBasedSplitter",
                        "path": "src/data_engineering/data_splitting/time_based.py"
                    }
                ]
            },
            {
                "node": "split by month",
                "feature_path": "Data Splitting/Temporal Split/Time-based Split/split by month",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "TimeBasedSplitter",
                        "path": "src/data_engineering/data_splitting/time_based.py"
                    }
                ]
            },
            {
                "node": "split by time zones",
                "feature_path": "Data Splitting/Temporal Split/Time-based Split/split by time zones",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "TimeBasedSplitter",
                        "path": "src/data_engineering/data_splitting/time_based.py"
                    }
                ]
            },
            {
                "node": "split by year",
                "feature_path": "Data Splitting/Temporal Split/Time-based Split/split by year",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "TimeBasedSplitter",
                        "path": "src/data_engineering/data_splitting/time_based.py"
                    }
                ]
            },
            {
                "node": "Train-Test Temporal Split",
                "feature_path": "Data Splitting/Temporal Split/Train-Test Temporal Split",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_splitting"
                    }
                ]
            },
            {
                "node": "split by event intervals",
                "feature_path": "Data Splitting/Temporal Split/Train-Test Temporal Split/split by event intervals",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "TrainTestTemporalSplitter",
                        "path": "src/data_engineering/data_splitting/train_test_temporal.py"
                    }
                ]
            },
            {
                "node": "split by test period",
                "feature_path": "Data Splitting/Temporal Split/Train-Test Temporal Split/split by test period",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "TrainTestTemporalSplitter",
                        "path": "src/data_engineering/data_splitting/train_test_temporal.py"
                    }
                ]
            },
            {
                "node": "split by time intervals",
                "feature_path": "Data Splitting/Temporal Split/Train-Test Temporal Split/split by time intervals",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "TrainTestTemporalSplitter",
                        "path": "src/data_engineering/data_splitting/train_test_temporal.py"
                    }
                ]
            },
            {
                "node": "Data Validation",
                "feature_path": "Data Validation",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_validation"
                    }
                ]
            },
            {
                "node": "Cross-validation",
                "feature_path": "Data Validation/Cross-validation",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_validation"
                    }
                ]
            },
            {
                "node": "Details",
                "feature_path": "Data Validation/Cross-validation/Details",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/data_engineering/data_validation"
                    }
                ]
            },
            {
                "node": "stratified cross-validation",
                "feature_path": "Data Validation/Cross-validation/Details/stratified cross-validation",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "stratified_cross_validation",
                        "path": "src/data_engineering/data_validation/cross_validation.py"
                    }
                ]
            }
        ],
        "Advanced Modeling Techniques": [
            {
                "node": "Model Evaluation",
                "feature_path": "Model Evaluation",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/advanced_modeling/model_evaluation"
                    }
                ]
            },
            {
                "node": "Comparative Evaluation",
                "feature_path": "Model Evaluation/Comparative Evaluation",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/advanced_modeling/model_evaluation"
                    }
                ]
            },
            {
                "node": "Precision-Recall Analysis",
                "feature_path": "Model Evaluation/Comparative Evaluation/Precision-Recall Analysis",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/advanced_modeling/model_evaluation"
                    }
                ]
            },
            {
                "node": "plot precision-recall curves",
                "feature_path": "Model Evaluation/Comparative Evaluation/Precision-Recall Analysis/plot precision-recall curves",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "plot_precision_recall_curve",
                        "path": "src/advanced_modeling/model_evaluation/precision_recall.py"
                    }
                ]
            },
            {
                "node": "ROC Analysis",
                "feature_path": "Model Evaluation/Comparative Evaluation/ROC Analysis",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/advanced_modeling/model_evaluation"
                    }
                ]
            },
            {
                "node": "micro-average roc",
                "feature_path": "Model Evaluation/Comparative Evaluation/ROC Analysis/micro-average roc",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "compute_micro_average_roc",
                        "path": "src/advanced_modeling/model_evaluation/roc_analysis.py"
                    }
                ]
            },
            {
                "node": "multi-class roc",
                "feature_path": "Model Evaluation/Comparative Evaluation/ROC Analysis/multi-class roc",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "compute_multiclass_roc",
                        "path": "src/advanced_modeling/model_evaluation/roc_analysis.py"
                    }
                ]
            },
            {
                "node": "precision-recall curve",
                "feature_path": "Model Evaluation/Comparative Evaluation/ROC Analysis/precision-recall curve",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "compute_precision_recall_curve",
                        "path": "src/advanced_modeling/model_evaluation/roc_analysis.py"
                    }
                ]
            },
            {
                "node": "roc curve plotting",
                "feature_path": "Model Evaluation/Comparative Evaluation/ROC Analysis/roc curve plotting",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ROCCurveVisualizer",
                        "path": "src/advanced_modeling/model_evaluation/roc_analysis.py"
                    }
                ]
            },
            {
                "node": "roc curve with auc",
                "feature_path": "Model Evaluation/Comparative Evaluation/ROC Analysis/roc curve with auc",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ROCCurveVisualizer",
                        "path": "src/advanced_modeling/model_evaluation/roc_analysis.py"
                    }
                ]
            },
            {
                "node": "roc curve with threshold selection",
                "feature_path": "Model Evaluation/Comparative Evaluation/ROC Analysis/roc curve with threshold selection",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "ROCCurveVisualizer",
                        "path": "src/advanced_modeling/model_evaluation/roc_analysis.py"
                    }
                ]
            },
            {
                "node": "Statistical Testing",
                "feature_path": "Model Evaluation/Comparative Evaluation/Statistical Testing",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/advanced_modeling/model_evaluation"
                    }
                ]
            },
            {
                "node": "interpret results",
                "feature_path": "Model Evaluation/Comparative Evaluation/Statistical Testing/interpret results",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "interpret_test_results",
                        "path": "src/advanced_modeling/model_evaluation/statistical_testing.py"
                    }
                ]
            },
            {
                "node": "one-tailed test",
                "feature_path": "Model Evaluation/Comparative Evaluation/Statistical Testing/one-tailed test",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "one_tailed_t_test",
                        "path": "src/advanced_modeling/model_evaluation/statistical_testing.py"
                    }
                ]
            },
            {
                "node": "paired t-test with confidence interval",
                "feature_path": "Model Evaluation/Comparative Evaluation/Statistical Testing/paired t-test with confidence interval",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "paired_t_test_with_confidence_interval",
                        "path": "src/advanced_modeling/model_evaluation/statistical_testing.py"
                    }
                ]
            },
            {
                "node": "paired t-test with multiple metrics",
                "feature_path": "Model Evaluation/Comparative Evaluation/Statistical Testing/paired t-test with multiple metrics",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "paired_t_test_multiple_metrics",
                        "path": "src/advanced_modeling/model_evaluation/statistical_testing.py"
                    }
                ]
            },
            {
                "node": "test assumptions",
                "feature_path": "Model Evaluation/Comparative Evaluation/Statistical Testing/test assumptions",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "test_statistical_assumptions",
                        "path": "src/advanced_modeling/model_evaluation/statistical_testing.py"
                    }
                ]
            },
            {
                "node": "two-tailed t-test",
                "feature_path": "Model Evaluation/Comparative Evaluation/Statistical Testing/two-tailed t-test",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "two_tailed_t_test",
                        "path": "src/advanced_modeling/model_evaluation/statistical_testing.py"
                    }
                ]
            },
            {
                "node": "visualize paired t-test results",
                "feature_path": "Model Evaluation/Comparative Evaluation/Statistical Testing/visualize paired t-test results",
                "file_paths": [
                    {
                        "type": "function",
                        "name": "visualize_paired_t_test_results",
                        "path": "src/advanced_modeling/model_evaluation/statistical_testing.py"
                    }
                ]
            },
            {
                "node": "Optimization Methods",
                "feature_path": "Optimization Methods",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/advanced_modeling/optimization"
                    }
                ]
            },
            {
                "node": "Ensemble Strategies",
                "feature_path": "Optimization Methods/Ensemble Strategies",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/advanced_modeling/optimization"
                    }
                ]
            },
            {
                "node": "Meta-Learning",
                "feature_path": "Optimization Methods/Ensemble Strategies/Meta-Learning",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/advanced_modeling/optimization"
                    }
                ]
            },
            {
                "node": "meta-learning",
                "feature_path": "Optimization Methods/Ensemble Strategies/Meta-Learning/meta-learning",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "MetaLearningModel",
                        "path": "src/advanced_modeling/optimization/meta_learning.py"
                    }
                ]
            },
            {
                "node": "Evolutionary Optimization",
                "feature_path": "Optimization Methods/Evolutionary Optimization",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/advanced_modeling/optimization"
                    }
                ]
            },
            {
                "node": "Genetic Algorithms",
                "feature_path": "Optimization Methods/Evolutionary Optimization/Genetic Algorithms",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/advanced_modeling/optimization"
                    }
                ]
            },
            {
                "node": "crossover operation",
                "feature_path": "Optimization Methods/Evolutionary Optimization/Genetic Algorithms/crossover operation",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "GeneticAlgorithm",
                        "path": "src/advanced_modeling/optimization/genetic_algorithms.py"
                    }
                ]
            },
            {
                "node": "genetic algorithm with custom fitness function",
                "feature_path": "Optimization Methods/Evolutionary Optimization/Genetic Algorithms/genetic algorithm with custom fitness function",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "GeneticAlgorithm",
                        "path": "src/advanced_modeling/optimization/genetic_algorithms.py"
                    }
                ]
            },
            {
                "node": "genetic algorithm with elitism",
                "feature_path": "Optimization Methods/Evolutionary Optimization/Genetic Algorithms/genetic algorithm with elitism",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "GeneticAlgorithm",
                        "path": "src/advanced_modeling/optimization/genetic_algorithms.py"
                    }
                ]
            },
            {
                "node": "Hyperparameter Optimization",
                "feature_path": "Optimization Methods/Hyperparameter Optimization",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/advanced_modeling/optimization"
                    }
                ]
            },
            {
                "node": "Tuning Strategies",
                "feature_path": "Optimization Methods/Hyperparameter Optimization/Tuning Strategies",
                "file_paths": [
                    {
                        "type": "dir",
                        "path": "src/advanced_modeling/optimization"
                    }
                ]
            },
            {
                "node": "hyperband",
                "feature_path": "Optimization Methods/Hyperparameter Optimization/Tuning Strategies/hyperband",
                "file_paths": [
                    {
                        "type": "class",
                        "name": "HyperbandOptimizer",
                        "path": "src/advanced_modeling/optimization/hyperparameter.py"
                    }
                ]
            }
        ]
    }
}
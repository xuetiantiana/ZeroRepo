const $=(o,h)=>{let c=0;const p=(l,e="root",i="",a=0,s)=>{const n=i?"".concat(i,"/").concat(e):e;if(Array.isArray(l))return l.map(r=>{const t=a+1;return{name:r,feature_path:"".concat(n,"/").concat(r),id:c++,level:t,level1Root:s}});if(typeof l=="object"&&l!==null){const r=[];for(const[t,u]of Object.entries(l))if(Array.isArray(u))r.push({name:t,feature_path:"".concat(n,"/").concat(t),id:c++,level:a,level1Root:s,children:u.map(f=>{const m=a+1;return{name:f,feature_path:"".concat(n,"/").concat(t,"/").concat(f),id:c++,level:m,level1Root:s}})});else if(typeof u=="object"){const f=p(u,t,n,a+1,s);Array.isArray(f)?r.push({name:t,feature_path:"".concat(n,"/").concat(t),id:c++,level:a,level1Root:s,children:f}):r.push({name:t,feature_path:"".concat(n,"/").concat(t),id:c++,level:a,children:f.children||[]})}return r}return{name:l,feature_path:n}};if(o&&o.subtrees&&o.subtrees.length>0){const l=[],e=["Data Engineering","Algorithms","Advanced Modeling Techniques","Workflow"];[...o.subtrees].sort((s,n)=>{const r=e.indexOf(s.name),t=e.indexOf(n.name);return r===-1&&t===-1?0:r===-1?1:t===-1?-1:r-t}).forEach((s,n)=>{if(s.refactored_subtree){const r=s.name||"Subtree_".concat(n+1),t=p(s.refactored_subtree,r,"",2,r),u={name:r,feature_path:"".concat(r),id:c++,level:1,children:t,level1Root:r};l.push(u)}});const a={name:"root",feature_path:"root",id:c++,level:0,children:l,visible:!0};return console.log("!!!!",l),console.log("数据转换完成:",a),console.log("处理了 ".concat(l.length," 个subtree组")),g(a,h),console.log(a),a}return console.warn("数据格式不正确，使用默认数据"),o},g=(o,h)=>{if(!o||!h){console.warn("treeData 或 mapData 为空");return}const c=e=>{e&&(p(e,h),e.children&&Array.isArray(e.children)&&e.children.forEach(i=>c(i)))},p=(e,i)=>{if(!e.feature_path){console.warn("节点缺少 feature_path:",e);return}const a=i.metadata||i,s=e.level1Root||l(e.feature_path);if(a[s]){const n=a[s];if(Array.isArray(n)){const r=n.find(t=>{if(typeof t=="object"&&t!==null){const u=t.feature_path===e.feature_path,f=t.node===e.name;return u||f}return!1});r?(e.metaData=r,console.log("为节点 ".concat(e.name," 找到匹配数据:"),r)):console.log("未找到节点 ".concat(e.name," 的匹配数据, feature_path: ").concat(e.feature_path))}else typeof n=="object"&&n[e.feature_path]&&(e.metaData=n[e.feature_path],console.log("为节点 ".concat(e.name," 找到对象数据:"),n[e.feature_path]))}else console.log("未找到根键 ".concat(s," 在mapData中"))},l=e=>e&&e.split("/").find(a=>a&&a!=="root")||"";return Array.isArray(o)?o.forEach(e=>c(e)):c(o),console.log("节点数据匹配完成"),o};function _(o){if(!o.children||o.children.length===0)return 1;const h=o.children.map(c=>_(c));return 1+Math.max(...h)}export{_ as g,$ as h};
